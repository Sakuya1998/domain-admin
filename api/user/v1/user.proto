syntax = "proto3";

package api.user.v1;

option go_package = "github.com/Sakuya1998/domain-admin/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.v1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "api/common/v1/common.proto";
import "validate/validate.proto";

service User {
   // 注册
   rpc Register (RegisterRequest) returns (RegisterReply) {
      option (google.api.http) = {
         post: "/api/v1/users/register"
         body: "*"
      };
   }
   // 登录
   rpc Login (LoginRequest) returns (LoginReply) {
      option (google.api.http) = {
         post: "/api/v1/users/login"
         body: "*"
      };
   }
   // 退出登录
   rpc Logout (LogoutRequest) returns (LogoutReply) {
      option (google.api.http) = {
         post: "/api/v1/users/logout"
         body: "*"
      };
   }
   // 获取用户信息
   rpc GetUserInfo (api.common.v1.IDRequest) returns (UserInfo) {
      option (google.api.http) = {
         get: "/api/v1/users/{id}"
      };
   }
   // 更新用户信息
   rpc UpdateUserInfo (UpdateUserInfoRequest) returns (UserInfo) {
      option (google.api.http) = {
         put: "/api/v1/users/{id}"
         body: "*"
      };
   }
   // 更新用户密码
   rpc UpdateUserPassword (UpdateUserPasswordRequest) returns (api.common.v1.EmptyReply) {
      option (google.api.http) = {
         put: "/api/v1/users/{id}/password"
         body: "*"
      };
   }
   // 更新用户状态
   rpc UpdateUserStatus(UpdateUserStatusRequest) returns (api.common.v1.EmptyReply) {
    option (google.api.http) = {
      put: "/api/v1/users/{id}/status"
      body: "*"
    };
   }
   // 获取用户列表
   rpc GetUserList (GetUserListRequest) returns (GetUserListReply) {
      option (google.api.http) = {
         get: "/api/v1/users"
      };
   }
   // 添加用户
   rpc AddUser (AddUserRequest) returns (UserInfo) {
      option (google.api.http) = {
         post: "/api/v1/users"
         body: "*"
      };
   }
   // 删除用户
   rpc DeleteUser (api.common.v1.IDRequest) returns (api.common.v1.EmptyReply) {
      option (google.api.http) = {
         delete: "/api/v1/users/{id}"
      };
   }
   // 重置用户密码
   rpc ResetUserPassword (ResetUserPasswordRequest) returns (api.common.v1.EmptyReply) {
      option (google.api.http) = {
         put: "/api/v1/users/{id}/reset-password"
         body: "*"
      };
   }
}

// 用户信息
message UserInfo {
   int64 id = 1;
   string username = 2 [                  // 用户名
      (validate.rules).string = {
         min_len: 3,
         max_len: 20,
         pattern: "^[a-zA-Z0-9_]+$"
      }
   ];
   string email = 3 [(validate.rules).string.email = true];  // 邮箱
   string phone = 4 [(validate.rules).string.pattern = "^1[0-9]{10}$"];  // 手机号
   string avatar = 5;
   api.common.v1.UserRole role = 6;
   api.common.v1.Status status = 7;
   google.protobuf.Timestamp created_at = 8;
   google.protobuf.Timestamp updated_at = 9;
   google.protobuf.Timestamp last_login_at = 10;
}

// 注册请求
message RegisterRequest {
   string username = 1 [(validate.rules).string = {
      min_len: 3,
      max_len: 20,
      pattern: "^[a-zA-Z0-9_]+$"
   }];
   string email = 2 [(validate.rules).string.email = true];
   string phone = 3 [(validate.rules).string.pattern = "^1[0-9]{10}$"]; 
   string password = 4 [(validate.rules).string = {
      min_len: 8,
      max_len: 20,
      pattern: "^[A-Za-z\\d]{8,20}$"  // 字母和数字组合，8-20位
   }];
}

// 注册响应
message RegisterReply {
   api.common.v1.Reply base = 1;
   string token = 2;
   UserInfo user_info = 3;
}

// 登录请求
message LoginRequest {
  oneof account {
    string username = 1 [(validate.rules).string = {
      min_len: 3,
      max_len: 20
    }];
    string email = 2 [(validate.rules).string.email = true];
  }
  string password = 3 [(validate.rules).string.min_len = 1];
}

// 登录响应
message LoginReply {
   api.common.v1.Reply base = 1;
   string token = 2;
   UserInfo user_info = 3;
}

// 登出请求
message LogoutRequest {
   string token = 1;
}

// 登出响应
message LogoutReply {
   api.common.v1.Reply base = 1;
}

// 更新用户信息请求
message UpdateUserInfoRequest {
   int64 id = 1 [(validate.rules).int64.gt = 0];
   string username = 2;
   string email = 3 [(validate.rules).string.email = true];
   string phone = 4;
   string avatar = 5;
}

// 更新用户密码请求
message UpdateUserPasswordRequest {
   int64 id = 1 [(validate.rules).int64.gt = 0];
   string old_password = 2 [(validate.rules).string.min_len = 1];
   string new_password = 3 [(validate.rules).string.min_len = 6];
}

// 更新用户状态请求
message UpdateUserStatusRequest {
   int64 id = 1 [(validate.rules).int64.gt = 0];
   api.common.v1.Status status = 2;
}

// 获取用户列表请求
message GetUserListRequest {
   api.common.v1.PageRequest page = 1;
   string keyword = 2;
   api.common.v1.UserRole role = 3;
   api.common.v1.Status status = 4;
}

// 获取用户列表响应
message GetUserListReply {
   api.common.v1.Reply base = 1;
   api.common.v1.PageReply page = 2;
   repeated UserInfo users = 3;
}

// 添加用户请求
message AddUserRequest {
   string username = 1 [(validate.rules).string.min_len = 1];
   string email = 2 [(validate.rules).string.email = true];
   string password = 3 [(validate.rules).string.min_len = 6];
   string phone = 4;
   api.common.v1.UserRole role = 5;
}

// 重置用户密码请求
message ResetUserPasswordRequest {
   int64 id = 1 [(validate.rules).int64.gt = 0];
   string new_password = 2 [(validate.rules).string.min_len = 6];
}